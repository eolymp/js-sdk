// Generated by the protocol buffer compiler. DO NOT EDIT!
// See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-js-esdk for more details.

import { Subscription } from "./subscription"

interface Client {
  call<R, E, O>(verb: string, url: string, args: R, opts?: any): Promise<E>;
}

export class SubscriptionService {
  private readonly cli: Client;
  private readonly url: string;

  constructor(cli: Client, url: string = 'https://api.eolymp.com') {
    this.cli = cli;
    this.url = url;
  }

  DescribeSubscription(input: DescribeSubscriptionInput, opts?: any): Promise<DescribeSubscriptionOutput> {
    const path = "/subscriptions/"+encodeURIComponent(input.subscriptionId||'');

    // Cleanup URL parameters to avoid any ambiguity
    delete(input.subscriptionId);

    return this.cli.call("GET", this.url+path, input, opts);
  }

  ListSubscriptions(input: ListSubscriptionsInput, opts?: any): Promise<ListSubscriptionsOutput> {
    const path = "/subscriptions";

    return this.cli.call("GET", this.url+path, input, opts);
  }
}

export type ListSubscriptionsInput = {
  offset?: number;
  size?: number;
}

export type ListSubscriptionsOutput = {
  total?: number;
  items?: Subscription[];
}

export type DescribeSubscriptionInput = {
  subscriptionId?: string;
}

export type DescribeSubscriptionOutput = {
  subscription?: Subscription;
}

