// Generated by the protocol buffer compiler. DO NOT EDIT!
// See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-js-esdk for more details.

import { Content } from "../ecm/content"

interface Client {
  call<R, E, O>(verb: string, url: string, args: R, opts?: any): Promise<E>;
}

export class EmailService {
  private readonly cli: Client;
  private readonly url: string;

  constructor(cli: Client, url: string = 'https://api.eolymp.com') {
    this.cli = cli;
    this.url = url;
  }

  SendEmail(input: SendEmailInput, opts?: any): Promise<SendEmailOutput> {
    const path = "/members/"+encodeURIComponent(input.memberId||'')+"/notify";

    // Cleanup URL parameters to avoid any ambiguity
    delete(input.memberId);

    return this.cli.call("POST", this.url+path, input, opts);
  }

  DescribeEmailUsage(input: DescribeEmailUsageInput, opts?: any): Promise<DescribeEmailUsageOutput> {
    const path = "/usage/emails";

    return this.cli.call("GET", this.url+path, input, opts);
  }
}

export type SendEmailInput = {
  memberId?: string;
  dryRun?: boolean;
  bccMe?: boolean;
  type?: string;
  locale?: string;
  subject?: string;
  content?: Content;
  parameters?: Record<string, string>;
}

export type SendEmailOutput = {
  messageId?: string;
}

export type DescribeEmailUsageInput = Record<string, unknown>;

export type DescribeEmailUsageOutput = {
  dailyEmails?: number;
  monthlyEmails?: number;
}

