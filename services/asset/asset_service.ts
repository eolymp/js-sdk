// Generated by the protocol buffer compiler. DO NOT EDIT!
// See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-js-esdk for more details.


interface Client {
  call<R, E, O>(verb: string, url: string, args: R, opts?: any): Promise<E>;
}

export class AssetService {
  private readonly cli: Client;
  private readonly url: string;

  constructor(cli: Client, url: string = 'https://api.eolymp.com') {
    this.cli = cli;
    this.url = url;
  }

  UploadImage(input: UploadImageInput, opts?: any): Promise<UploadImageOutput> {
    const path = "/assets/images";

    return this.cli.call("POST", this.url+path, input, opts);
  }

  UploadFile(input: UploadFileInput, opts?: any): Promise<UploadFileOutput> {
    const path = "/assets/files";

    return this.cli.call("POST", this.url+path, input, opts);
  }
}

export type UploadImageInput = {
  name?: string;
  type?: string;
  crop?: UploadImageInput_Crop;
  size?: UploadImageInput_Size;
  variants?: UploadImageInput_Size[];
  data?: string;
}

export type UploadImageInput_Size = {
  width?: number;
  height?: number;
}

export type UploadImageInput_Crop = {
  top?: number;
  right?: number;
  bottom?: number;
  left?: number;
}

export type UploadImageOutput = {
  imageUrl?: string;
}

export type UploadFileInput = {
  name?: string;
  type?: string;
  data?: string;
}

export type UploadFileOutput = {
  fileUrl?: string;
}

