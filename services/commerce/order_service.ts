// Generated by the protocol buffer compiler. DO NOT EDIT!
// See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-js-esdk for more details.

import { ExpressionEnum, ExpressionID } from "../wellknown/expression"
import { Order } from "./order"

interface Client {
  call<R, E, O>(verb: string, url: string, args: R, opts?: any): Promise<E>;
}

export class OrderService {
  private readonly cli: Client;
  private readonly url: string;

  constructor(cli: Client, url: string = 'https://api.eolymp.com') {
    this.cli = cli;
    this.url = url;
  }

  CancelOrder(input: CancelOrderInput, opts?: any): Promise<CancelOrderOutput> {
    const path = "/store/orders/"+encodeURIComponent(input.orderId||'')+"/cancel";

    // Cleanup URL parameters to avoid any ambiguity
    delete(input.orderId);

    return this.cli.call("POST", this.url+path, input, opts);
  }

  DescribeOrder(input: DescribeOrderInput, opts?: any): Promise<DescribeOrderOutput> {
    const path = "/store/orders/"+encodeURIComponent(input.orderId||'');

    // Cleanup URL parameters to avoid any ambiguity
    delete(input.orderId);

    return this.cli.call("POST", this.url+path, input, opts);
  }

  ListOrders(input: ListOrdersInput, opts?: any): Promise<ListOrdersOutput> {
    const path = "/store/orders";

    return this.cli.call("GET", this.url+path, input, opts);
  }
}

export type OrderChangedEvent = {
  before?: Order;
  after?: Order;
}

export type CancelOrderInput = {
  orderId?: string;
}

export type CancelOrderOutput = Record<string, unknown>;

export type DescribeOrderInput = {
  orderId?: string;
}

export type DescribeOrderOutput = {
  order?: Order;
}

export type ListOrdersInput = {
  offset?: number;
  size?: number;
  search?: string;
  filters?: ListOrdersInput_Filter;
  sort?: string;
  order?: string;
}

export type ListOrdersInput_Filter = {
  id?: ExpressionID[];
  reference?: ExpressionID[];
  memberId?: ExpressionID[];
  status?: ExpressionEnum[];
}

export type ListOrdersOutput = {
  total?: number;
  items?: Order[];
}

