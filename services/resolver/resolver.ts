// Generated by the protocol buffer compiler. DO NOT EDIT!
// See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-js-esdk for more details.


interface Client {
  call<R, E, O>(verb: string, url: string, args: R, opts: O): Promise<E>;
}

export class Resolver {
  private readonly cli: Client;
  private readonly url: string;

  constructor(url: string, cli: Client) {
    this.cli = cli;
    this.url = url;
  }

  ResolveName<O>(input: ResolveNameInput, opts?: O): Promise<ResolveNameOutput> {
    const path = "/names/"+encodeURIComponent(input.name||'');

    // Cleanup URL parameters to avoid any ambiguity
    delete(input.name);

    return this.cli.call("GET", this.url + path, input, opts);
  }
}

export type Record = {
  key?: string;
  spaceId?: string;
  summary?: string;
  auth?: Record_Auth;
  target?: Record_Target;
}

export type Record_Auth = {
  clientId?: string;
  clientSecret?: string;
  scopes?: string;
  tokenUrl?: string;
  authorizeUrl?: string;
}

export type Record_Target = {
  type?: string;
  url?: string;
}

export type ResolveNameInput = {
  name?: string;
}

export type ResolveNameOutput = {
  auth?: Record_Auth;
  target?: Record_Target;
}

