"use strict";
// Generated by the protocol buffer compiler. DO NOT EDIT!
// See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-js-esdk for more details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Universe = void 0;
class Universe {
    constructor(cli) {
        this.cli = cli;
    }
    CreateSpace(input, opts) {
        return this.cli.call("eolymp.universe.Universe/CreateSpace", input, opts);
    }
    UpdateSpace(input, opts) {
        return this.cli.call("eolymp.universe.Universe/UpdateSpace", input, opts);
    }
    DeleteSpace(input, opts) {
        return this.cli.call("eolymp.universe.Universe/DeleteSpace", input, opts);
    }
    LookupSpace(input, opts) {
        return this.cli.call("eolymp.universe.Universe/LookupSpace", input, opts);
    }
    DescribeSpace(input, opts) {
        return this.cli.call("eolymp.universe.Universe/DescribeSpace", input, opts);
    }
    ListSpaces(input, opts) {
        return this.cli.call("eolymp.universe.Universe/ListSpaces", input, opts);
    }
    GrantPermission(input, opts) {
        return this.cli.call("eolymp.universe.Universe/GrantPermission", input, opts);
    }
    RevokePermission(input, opts) {
        return this.cli.call("eolymp.universe.Universe/RevokePermission", input, opts);
    }
    DescribePermission(input, opts) {
        return this.cli.call("eolymp.universe.Universe/DescribePermission", input, opts);
    }
    IntrospectPermission(input, opts) {
        return this.cli.call("eolymp.universe.Universe/IntrospectPermission", input, opts);
    }
    ListPermissions(input, opts) {
        return this.cli.call("eolymp.universe.Universe/ListPermissions", input, opts);
    }
}
exports.Universe = Universe;
//# sourceMappingURL=universe.js.map