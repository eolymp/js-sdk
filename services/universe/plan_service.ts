// Generated by the protocol buffer compiler. DO NOT EDIT!
// See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-js-esdk for more details.

import { Plan } from "./plan"

interface Client {
  call<R, E, O>(verb: string, url: string, args: R, opts?: any): Promise<E>;
}

export class PlanService {
  private readonly cli: Client;
  private readonly url: string;

  constructor(cli: Client, url: string = 'https://api.eolymp.com') {
    this.cli = cli;
    this.url = url;
  }

  DescribePlan(input: DescribePlanInput, opts?: any): Promise<DescribePlanOutput> {
    const path = "/plans/"+encodeURIComponent(input.planId||'');

    // Cleanup URL parameters to avoid any ambiguity
    delete(input.planId);

    return this.cli.call("GET", this.url+path, input, opts);
  }

  ListPlans(input: ListPlansInput, opts?: any): Promise<ListPlansOutput> {
    const path = "/plans";

    return this.cli.call("GET", this.url+path, input, opts);
  }
}

export type DescribePlanInput = {
  planId?: string;
  locale?: string;
  currency?: string;
  spaceId?: string;
  extra?: string[];
}

export type DescribePlanOutput = {
  plan?: Plan;
}

export type ListPlansInput = {
  offset?: number;
  size?: number;
  locale?: string;
  currency?: string;
  spaceId?: string;
  extra?: string[];
}

export type ListPlansOutput = {
  total?: number;
  items?: Plan[];
}

