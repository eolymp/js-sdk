// Generated by the protocol buffer compiler. DO NOT EDIT!
// See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-js-esdk for more details.


interface Client {
  call<R, E, O>(verb: string, url: string, args: R, opts?: any): Promise<E>;
}

export class EditorService {
  private readonly cli: Client;
  private readonly url: string;

  constructor(cli: Client, url: string = 'https://api.eolymp.com') {
    this.cli = cli;
    this.url = url;
  }

  DescribeState(input: DescribeStateInput, opts?: any): Promise<DescribeStateOutput> {
    const path = "/editor/state";

    return this.cli.call("GET", this.url+path, input, opts);
  }

  UpdateState(input: UpdateStateInput, opts?: any): Promise<UpdateStateOutput> {
    const path = "/editor/state";

    return this.cli.call("POST", this.url+path, input, opts);
  }

  PrintCode(input: PrintCodeInput, opts?: any): Promise<PrintCodeOutput> {
    const path = "/editor/print";

    return this.cli.call("POST", this.url+path, input, opts);
  }
}

export type DescribeStateInput = Record<string, unknown>;

export type DescribeStateOutput = {
  runtime?: string;
  sourceCode?: string;
  inputData?: string;
}

export type UpdateStateInput = {
  runtime?: string;
  sourceCode?: string;
  inputData?: string;
}

export type UpdateStateOutput = Record<string, unknown>;

export type PrintCodeInput = {
  runtime?: string;
  sourceCode?: string;
}

export type PrintCodeOutput = Record<string, unknown>;

