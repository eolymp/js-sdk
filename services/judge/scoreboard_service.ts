// Generated by the protocol buffer compiler. DO NOT EDIT!
// See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-js-esdk for more details.

import { ExpressionBool } from "../wellknown/expression"
import { Scoreboard, Scoreboard_Row } from "./scoreboard"

interface Client {
  call<R, E, O>(verb: string, url: string, args: R, opts?: any): Promise<E>;
}

export class ScoreboardService {
  private readonly cli: Client;
  private readonly url: string;

  constructor(cli: Client, url: string = 'https://api.eolymp.com') {
    this.cli = cli;
    this.url = url;
  }

  DescribeScoreboard(input: DescribeScoreboardInput, opts?: any): Promise<DescribeScoreboardOutput> {
    const path = "/scoreboard";

    return this.cli.call("GET", this.url+path, input, opts);
  }

  ListScoreboardRows(input: ListScoreboardRowsInput, opts?: any): Promise<ListScoreboardRowsOutput> {
    const path = "/scoreboard/rows";

    return this.cli.call("GET", this.url+path, input, opts);
  }
}

export type DescribeScoreboardInput = Record<string, unknown>;

export type DescribeScoreboardOutput = {
  scoreboard?: Scoreboard;
}

export type ListScoreboardRowsInput = {
  mode?: string;
  roundId?: string;
  size?: number;
  offset?: number;
  filters?: ListScoreboardRowsInput_Filter;
  sort?: string;
  order?: string;
}

export type ListScoreboardRowsInput_Filter = {
  unofficial?: ExpressionBool[];
  disqualified?: ExpressionBool[];
}

export type ListScoreboardRowsOutput = {
  total?: number;
  items?: Scoreboard_Row[];
}

