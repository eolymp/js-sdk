// Generated by the protocol buffer compiler. DO NOT EDIT!
// See https://github.com/eolymp/contracts/tree/main/cmd/protoc-gen-js-esdk for more details.

import { ExpressionID } from "../wellknown/expression"
import { Grade } from "./grade"

interface Client {
  call<R, E, O>(verb: string, url: string, args: R, opts?: any): Promise<E>;
}

export class GradeService {
  private readonly cli: Client;
  private readonly url: string;

  constructor(cli: Client, url: string = 'https://api.eolymp.com') {
    this.cli = cli;
    this.url = url;
  }

  DescribeGrade(input: DescribeGradeInput, opts?: any): Promise<DescribeGradeOutput> {
    const path = "/grades/"+encodeURIComponent(input.memberId||'');

    // Cleanup URL parameters to avoid any ambiguity
    delete(input.memberId);

    return this.cli.call("GET", this.url+path, input, opts);
  }

  IntrospectGrade(input: IntrospectGradeInput, opts?: any): Promise<IntrospectGradeOutput> {
    const path = "/viewer/grade";

    return this.cli.call("GET", this.url+path, input, opts);
  }

  ListGrades(input: ListGradesInput, opts?: any): Promise<ListGradesOutput> {
    const path = "/grades";

    return this.cli.call("GET", this.url+path, input, opts);
  }
}

export type DescribeGradeInput = {
  memberId?: string;
  extra?: string[];
}

export type DescribeGradeOutput = {
  grade?: Grade;
}

export type IntrospectGradeInput = Record<string, unknown>;

export type IntrospectGradeOutput = {
  grade?: Grade;
}

export type ListGradesInput = {
  offset?: number;
  size?: number;
  filters?: ListGradesInput_Filter;
  sort?: string;
  order?: string;
  extra?: string[];
}

export type ListGradesInput_Filter = {
  id?: ExpressionID[];
  memberId?: ExpressionID[];
}

export type ListGradesOutput = {
  total?: number;
  items?: Grade[];
}

